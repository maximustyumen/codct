Moving an object with the pointer

Here is some sample code to move an object. object2w is the object's transformation matrix in world space. lastWand2w and wand2w are the wand matrices from the previous and current frames, respectively, from cover->getPointer().

void move(Matrix& lastWand2w, Matrix& wand2w)
{
    // Compute difference matrix between last and current wand:
    Matrix invLastWand2w = Matrix::inverse(lastWand2w);
    Matrix wDiff = invLastWand2w * wand2w;

    // Perform move:
    _node->setMatrix(object2w * wDiff);
}




------------------------



Tracker Data

Here is a piece of code to get the pointer (=wand) position (pos1) and a point 1000 millimeters from it (pos2) along the pointer line:

   osg::Vec3 pointerPos1Wld = cover->getPointerMat().getTrans();
   osg::Vec3 pointerPos2Wld = osg::Vec3(0.0, 1000.0, 0.0);
   pointerPos2Wld = pointerPos2Wld * cover->getPointerMat();

This is the way to get the head position:

   Vec3 viewerPosWld = cover->getViewerMat().getTrans();
